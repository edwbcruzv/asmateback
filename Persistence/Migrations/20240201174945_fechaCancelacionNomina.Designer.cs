// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence.Contexts;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240201174945_fechaCancelacionNomina")]
    partial class fechaCancelacionNomina
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.AhorroVoluntario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Descuento")
                        .HasColumnType("real");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodoFinal")
                        .HasColumnType("int");

                    b.Property<int>("PeriodoInicial")
                        .HasColumnType("int");

                    b.Property<float>("Rendimiento")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AhorrosVoluntario");
                });

            modelBuilder.Entity("Domain.Entities.AhorroWise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodoFinal")
                        .HasColumnType("int");

                    b.Property<int>("PeriodoInicial")
                        .HasColumnType("int");

                    b.Property<float>("Rendimiento")
                        .HasColumnType("real");

                    b.Property<string>("SrcFileConstancia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SrcFilePago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("AhorrosWise");
                });

            modelBuilder.Entity("Domain.Entities.Banco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Bancos");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clabe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Correos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoInt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("TipoPersona")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("RegimenFiscalId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Domain.Entities.CodigoPostale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Asentamiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ciudad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoAsentamiento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CodigoPostales");
                });

            modelBuilder.Entity("Domain.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Calle")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Certificado")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Colonia")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("CompanyProfile")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int?>("FolioFactura")
                        .HasColumnType("int");

                    b.Property<int?>("FolioNomina")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoExt")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("NoInt")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Pais")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PassPrivateKey")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrivateKeyFile")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("RegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("RegistroPatronal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RepresentanteLegal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rfc")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<int>("SalaryDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RegimenFiscalId");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Domain.Entities.ComplementoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CadenaOriginal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmisorRazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmisorRegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("EmisorRfc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Estatus")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaCancelacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTimbrado")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileXmlTimbrado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Folio")
                        .HasColumnType("int");

                    b.Property<int>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoSrcCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LugarExpedicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MotivoCancelacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoCertificadoSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PagoSrcPdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorDomicilioFiscal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorRazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceptorRegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("ReceptorRfc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelloCfdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelloSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoMonedaId")
                        .HasColumnType("int");

                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmisorRegimenFiscalId");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("TipoMonedaId");

                    b.ToTable("ComplementoPagos");
                });

            modelBuilder.Entity("Domain.Entities.ComplementoPagoFactura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ComplementoPagoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<int>("Folio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("ComplementoPagoId");

                    b.HasIndex("FacturaId");

                    b.ToTable("ComplementoPagoFacturas");
                });

            modelBuilder.Entity("Domain.Entities.Comprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathPDF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathXML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<int>("ViaticoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ViaticoId");

                    b.ToTable("Comprobantes");
                });

            modelBuilder.Entity("Domain.Entities.ComprobanteSinXML", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Descuento")
                        .HasColumnType("real");

                    b.Property<string>("EmisorNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmisorRFC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Folio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathPDF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorNombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorRFC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("SubTotal")
                        .HasColumnType("real");

                    b.Property<int>("TipoMonedaId")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ViaticoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("TipoMonedaId");

                    b.HasIndex("ViaticoId");

                    b.ToTable("ComprobantesSinXML");
                });

            modelBuilder.Entity("Domain.Entities.ContractsUserCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("UserId");

                    b.ToTable("ContractsUserCompanies");
                });

            modelBuilder.Entity("Domain.Entities.CveProducto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CveProductos");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("AjusteIsr")
                        .HasColumnType("float");

                    b.Property<string>("ApellidoMaterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPaterno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("BancoId")
                        .HasColumnType("int");

                    b.Property<string>("CLABE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Calle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodigoPostal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Colonia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditoFonacot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreditoInfonavit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("CuentaIndividual")
                        .HasColumnType("smallint");

                    b.Property<string>("Curp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("DescuentoCreditoHipo")
                        .HasColumnType("float");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EstadoCivil")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaContrato")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FinContrato")
                        .HasColumnType("datetime2");

                    b.Property<double?>("FondoAhorroEmpleado")
                        .HasColumnType("float");

                    b.Property<double?>("FondoAhorroEmpresa")
                        .HasColumnType("float");

                    b.Property<int?>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Ingreso")
                        .HasColumnType("datetime2");

                    b.Property<int?>("JefeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailCorporativo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Municipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("NoEmpleado")
                        .HasColumnType("bigint");

                    b.Property<string>("NoExt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoInt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nss")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Porcentaje")
                        .HasColumnType("float");

                    b.Property<double?>("PorcentajePrimaVacacional")
                        .HasColumnType("float");

                    b.Property<int?>("PuestoId")
                        .HasColumnType("int");

                    b.Property<int?>("RegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("RegistroPatronal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RelojChecador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Rfc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("SBC")
                        .HasColumnType("float");

                    b.Property<double?>("SalarioDiario")
                        .HasColumnType("float");

                    b.Property<double?>("SalarioDiarioIntegrado")
                        .HasColumnType("float");

                    b.Property<double?>("SalarioMensual")
                        .HasColumnType("float");

                    b.Property<string>("TelefonoFijo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TelefonoMovil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoContratoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoIncapacidadId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoJornadaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoNomina")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPeriocidadPagoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPrevicionSocial")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRegimenId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoRiesgoTrabajoId")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BancoId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("JefeId");

                    b.HasIndex("PuestoId");

                    b.HasIndex("RegimenFiscalId");

                    b.HasIndex("TipoContratoId");

                    b.HasIndex("TipoIncapacidadId");

                    b.HasIndex("TipoJornadaId");

                    b.HasIndex("TipoPeriocidadPagoId");

                    b.HasIndex("TipoRegimenId");

                    b.HasIndex("TipoRiesgoTrabajoId");

                    b.HasIndex("UserId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("Domain.Entities.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("Domain.Entities.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CadenaOriginal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmisorRazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmisorRegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("EmisorRfc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short?>("Estatus")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaCancelacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTimbrado")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileXmlTimbrado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Folio")
                        .HasColumnType("int");

                    b.Property<int>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoSrcCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LugarExpedicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<string>("MotivoCancelacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoCertificadoSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PagoSrcPdf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorDomicilioFiscal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorRazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceptorRegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("ReceptorRfc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelloCfdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelloSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoComprobanteId")
                        .HasColumnType("int");

                    b.Property<int>("TipoMonedaId")
                        .HasColumnType("int");

                    b.Property<int>("UsoCfdiId")
                        .HasColumnType("int");

                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmisorRegimenFiscalId");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("TipoComprobanteId");

                    b.HasIndex("TipoMonedaId");

                    b.HasIndex("UsoCfdiId");

                    b.ToTable("Facturas");
                });

            modelBuilder.Entity("Domain.Entities.FacturaMovimiento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CveProductoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Descuento")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("FacturaId")
                        .HasColumnType("int");

                    b.Property<bool>("Iva")
                        .HasColumnType("bit");

                    b.Property<bool>("Iva6")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ObjetoImpuestoId")
                        .HasColumnType("int");

                    b.Property<decimal>("PrecioUnitario")
                        .HasColumnType("decimal(18,4)");

                    b.Property<bool>("RetencionIsr")
                        .HasColumnType("bit");

                    b.Property<bool>("RetencionIva")
                        .HasColumnType("bit");

                    b.Property<int>("UnidadMedidaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CveProductoId");

                    b.HasIndex("FacturaId");

                    b.HasIndex("ObjetoImpuestoId");

                    b.HasIndex("UnidadMedidaId");

                    b.ToTable("FacturaMovimientos");
                });

            modelBuilder.Entity("Domain.Entities.FormaPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormaDePago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FormaPagos");
                });

            modelBuilder.Entity("Domain.Entities.ImssDescuento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Exc")
                        .HasColumnType("smallint");

                    b.Property<double>("Fin")
                        .HasColumnType("float");

                    b.Property<double>("Inicio")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Patron")
                        .HasColumnType("float");

                    b.Property<double>("Trabajador")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("ImssDescuentos");
                });

            modelBuilder.Entity("Domain.Entities.Incidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ArchivoSrc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Dias")
                        .HasColumnType("int");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("EstatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("Justificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Motivo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("EstatusId");

                    b.HasIndex("TipoId");

                    b.ToTable("Incidencias", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Isr", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CuotaFija")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LimiteInferior")
                        .HasColumnType("float");

                    b.Property<double>("LimiteSuperior")
                        .HasColumnType("float");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<double>("Porcentaje")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Isrs");
                });

            modelBuilder.Entity("Domain.Entities.Menu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuOrder")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MenuSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.MenuUserSelector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.HasIndex("UserId");

                    b.ToTable("MenuUserSelectors");
                });

            modelBuilder.Entity("Domain.Entities.MetodoPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MetodoDePago")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MetodoPagos");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoAhorroVoluntario", b =>
                {
                    b.Property<int>("AhorroVoluntarioId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("MovimientoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoTransaccion")
                        .HasColumnType("int");

                    b.Property<float>("Interes")
                        .HasColumnType("real");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<float>("Rendimiento")
                        .HasColumnType("real");

                    b.HasKey("AhorroVoluntarioId", "EmployeeId", "CompanyId", "MovimientoId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("MovimientosAhorrosVoluntario");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoAhorroWise", b =>
                {
                    b.Property<int>("AhorroWiseId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("MovimientoId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoTransaccion")
                        .HasColumnType("int");

                    b.Property<float>("Interes")
                        .HasColumnType("real");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<float>("Rendimiento")
                        .HasColumnType("real");

                    b.HasKey("AhorroWiseId", "EmployeeId", "CompanyId", "MovimientoId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("MovimientosAhorrosWise");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoPrestamo", b =>
                {
                    b.Property<int>("PrestamoId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("MovimientoId")
                        .HasColumnType("int");

                    b.Property<float>("Capital")
                        .HasColumnType("real");

                    b.Property<int>("EstadoTransaccion")
                        .HasColumnType("int");

                    b.Property<float>("FondoGarantia")
                        .HasColumnType("real");

                    b.Property<float>("Interes")
                        .HasColumnType("real");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<float>("Moratorio")
                        .HasColumnType("real");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.Property<float>("Rendimiento")
                        .HasColumnType("real");

                    b.Property<float>("SaldoActual")
                        .HasColumnType("real");

                    b.HasKey("PrestamoId", "EmployeeId", "CompanyId", "MovimientoId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("MovimientosPrestamo");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoReembolso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AnoyMes")
                        .HasColumnType("int");

                    b.Property<string>("Concepto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmisorNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmisorRFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FechaMovimiento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaTimbrado")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FormaPagoId")
                        .HasColumnType("int");

                    b.Property<double?>("IEPS")
                        .HasColumnType("float");

                    b.Property<double?>("ISH")
                        .HasColumnType("float");

                    b.Property<double?>("ISR")
                        .HasColumnType("float");

                    b.Property<double?>("IVARetenidos")
                        .HasColumnType("float");

                    b.Property<double?>("IVATrasladados")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LineaCaptura")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LugarExpedicion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MetodoPagoId")
                        .HasColumnType("int");

                    b.Property<string>("PDFSrcFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorNombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorRFC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReembolsoId")
                        .HasColumnType("int");

                    b.Property<int?>("RegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<double>("Subtotal")
                        .HasColumnType("float");

                    b.Property<double?>("TipoCambio")
                        .HasColumnType("float");

                    b.Property<int?>("TipoComprobanteId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoImpuestoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoMonedaId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoReembolsoId")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("XMLSrcFile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormaPagoId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("ReembolsoId");

                    b.HasIndex("RegimenFiscalId");

                    b.HasIndex("TipoComprobanteId");

                    b.HasIndex("TipoImpuestoId");

                    b.HasIndex("TipoMonedaId");

                    b.HasIndex("TipoReembolsoId");

                    b.ToTable("MovimientoReembolsos");
                });

            modelBuilder.Entity("Domain.Entities.Nif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFin")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<string>("NombreEjercicio")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Nif", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.NifResultado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double>("Aguinaldo")
                        .HasColumnType("float");

                    b.Property<int>("Año")
                        .HasColumnType("int");

                    b.Property<double>("CuotasPatronales")
                        .HasColumnType("float");

                    b.Property<DateTime>("FechaIngreso")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEmpleado")
                        .HasColumnType("int");

                    b.Property<double>("Infonavit")
                        .HasColumnType("float");

                    b.Property<double>("Isr")
                        .HasColumnType("float");

                    b.Property<int>("Mes")
                        .HasColumnType("int");

                    b.Property<int?>("NifId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrimaAntiguedad")
                        .HasColumnType("float");

                    b.Property<double>("PrimaVacacional")
                        .HasColumnType("float");

                    b.Property<double>("Rcv")
                        .HasColumnType("float");

                    b.Property<string>("Rfc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Subsidio")
                        .HasColumnType("float");

                    b.Property<double>("SueldoBase")
                        .HasColumnType("float");

                    b.Property<double>("SueldoDiario")
                        .HasColumnType("float");

                    b.Property<double>("Vacaciones")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("NifId");

                    b.ToTable("NifResultado", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Nomina", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CadenaOriginal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiasPago")
                        .HasColumnType("int");

                    b.Property<string>("EmisorRazonSocial")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmisorRegimenFistalId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<short>("Estatus")
                        .HasColumnType("smallint");

                    b.Property<DateTime?>("FechaCancelacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaTimbrado")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileXmlTimbrado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Folio")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hasta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoSrcCompany")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LugarExpedicion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MetodoPagoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("NoCertificadoSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PeriodoId")
                        .HasColumnType("int");

                    b.Property<int?>("PuestoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("ReceptorDomicilioFiscal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceptorRazonSocial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceptorRegimenFiscalId")
                        .HasColumnType("int");

                    b.Property<string>("ReceptorRfc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ReceptorUsoCfdiId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("RegistroPatronal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelloCfdi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SelloSat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TipoContratoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TipoDeduccionId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoJornadaId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TipoMonedaId")
                        .HasColumnType("int");

                    b.Property<short>("TipoNomina")
                        .HasColumnType("smallint");

                    b.Property<int?>("TipoOtroPagoId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPercepcionId")
                        .HasColumnType("int");

                    b.Property<int?>("TipoPeriocidadPagoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TipoRegimenId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TipoRiesgoTrabajoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Uuid")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmisorRegimenFistalId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("MetodoPagoId");

                    b.HasIndex("PeriodoId");

                    b.HasIndex("PuestoId");

                    b.HasIndex("ReceptorUsoCfdiId");

                    b.HasIndex("TipoContratoId");

                    b.HasIndex("TipoDeduccionId");

                    b.HasIndex("TipoJornadaId");

                    b.HasIndex("TipoOtroPagoId");

                    b.HasIndex("TipoPercepcionId");

                    b.HasIndex("TipoPeriocidadPagoId");

                    b.HasIndex("TipoRegimenId");

                    b.HasIndex("TipoRiesgoTrabajoId");

                    b.ToTable("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.NominaDeduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NominaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NominaId");

                    b.ToTable("NominaDeducciones");
                });

            modelBuilder.Entity("Domain.Entities.NominaOtroPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Importe")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NominaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NominaId");

                    b.ToTable("NominaOtroPagos");
                });

            modelBuilder.Entity("Domain.Entities.NominaPercepcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Concepto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ImporteExento")
                        .HasColumnType("float");

                    b.Property<double>("ImporteGravado")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NominaId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("NominaId");

                    b.ToTable("NominaPercepciones");
                });

            modelBuilder.Entity("Domain.Entities.ObjetoImpuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ObjetosImpuesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ObjetoImpuestos");
                });

            modelBuilder.Entity("Domain.Entities.Periodo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Asistencias")
                        .HasColumnType("bit");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Desde")
                        .HasColumnType("datetime2");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("Etapa")
                        .HasColumnType("int");

                    b.Property<DateTime>("Hasta")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<int>("TipoPeriocidadPagoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("TipoPeriocidadPagoId");

                    b.ToTable("Periodos");
                });

            modelBuilder.Entity("Domain.Entities.Prestamo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Descuento")
                        .HasColumnType("real");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaFinal")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaTransferencia")
                        .HasColumnType("datetime2");

                    b.Property<float>("FondoGarantia")
                        .HasColumnType("real");

                    b.Property<float>("Interes")
                        .HasColumnType("real");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<float>("MontoPagado")
                        .HasColumnType("real");

                    b.Property<int>("PeriodoFinal")
                        .HasColumnType("int");

                    b.Property<int>("PeriodoInicial")
                        .HasColumnType("int");

                    b.Property<int>("Plazo")
                        .HasColumnType("int");

                    b.Property<float>("PlazoInteres")
                        .HasColumnType("real");

                    b.Property<float>("TazaFondoGarantia")
                        .HasColumnType("real");

                    b.Property<float>("TazaInteres")
                        .HasColumnType("real");

                    b.Property<int>("Tipo")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Prestamos");
                });

            modelBuilder.Entity("Domain.Entities.Puesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("Puestos");
                });

            modelBuilder.Entity("Domain.Entities.Reembolso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clabe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstatusId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SrcPdfPagoComprobante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UsuarioIdPago")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EstatusId");

                    b.HasIndex("UsuarioIdPago");

                    b.ToTable("Rembolsos");
                });

            modelBuilder.Entity("Domain.Entities.RegimenFiscal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegimenFiscalCve")
                        .IsRequired()
                        .HasMaxLength(3)
                        .IsUnicode(false)
                        .HasColumnType("char(3)")
                        .IsFixedLength();

                    b.Property<string>("RegimenFiscalDesc")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.HasKey("Id");

                    b.ToTable("RegimenFiscal", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.RegistroAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Comentarios")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Dia")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoAsistenciaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("TipoAsistenciaId");

                    b.ToTable("RegistroAsistencias");
                });

            modelBuilder.Entity("Domain.Entities.SalarioMinimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SalarioMinimos");
                });

            modelBuilder.Entity("Domain.Entities.Sistema", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Sistemas");
                });

            modelBuilder.Entity("Domain.Entities.SistemaDepartamento", b =>
                {
                    b.Property<int>("SistemaId")
                        .HasColumnType("int");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.HasKey("SistemaId", "DepartamentoId");

                    b.HasIndex("DepartamentoId");

                    b.ToTable("SistemaDepartamento");
                });

            modelBuilder.Entity("Domain.Entities.SubMenu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MenuId")
                        .HasColumnType("int");

                    b.Property<string>("SubMenuIcon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubMenuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubMenuOrder")
                        .HasColumnType("int");

                    b.Property<string>("SubMenuSource")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("MenuId");

                    b.ToTable("SubMenus");
                });

            modelBuilder.Entity("Domain.Entities.SubMenuUserSelector", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("MenuId")
                        .HasColumnType("int");

                    b.Property<int>("SubMenuId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SubMenuId");

                    b.HasIndex("UserId");

                    b.ToTable("SubMenuUserSelectors");
                });

            modelBuilder.Entity("Domain.Entities.Subsidio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("CuotaFija")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("LimiteInferior")
                        .HasColumnType("float");

                    b.Property<double>("LimiteSuperior")
                        .HasColumnType("float");

                    b.Property<int>("Periodo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Subsidios");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeAsignadoId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeCreadorId")
                        .HasColumnType("int");

                    b.Property<int>("EstadoId")
                        .HasColumnType("int");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpcionMenu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OpcionSubMenu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SistemaId")
                        .HasColumnType("int");

                    b.Property<string>("SrcImagen")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoSolicitudTicketId")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("EmployeeAsignadoId");

                    b.HasIndex("EmployeeCreadorId");

                    b.HasIndex("EstadoId");

                    b.HasIndex("SistemaId");

                    b.HasIndex("TipoSolicitudTicketId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Domain.Entities.TipoAsistencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("SePagaAguinaldo")
                        .HasColumnType("bit");

                    b.Property<bool?>("SePagaIncapacidad")
                        .HasColumnType("bit");

                    b.Property<bool?>("SePagaNomina")
                        .HasColumnType("bit");

                    b.Property<bool?>("SePagaPtu")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TipoAsistencias");
                });

            modelBuilder.Entity("Domain.Entities.TipoComprobante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDeComprobante")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoComprobantes");
                });

            modelBuilder.Entity("Domain.Entities.TipoContrato", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoContratos");
                });

            modelBuilder.Entity("Domain.Entities.TipoDeduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoDeducciones");
                });

            modelBuilder.Entity("Domain.Entities.TipoEstatusIncidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoEstatusIncidencia");
                });

            modelBuilder.Entity("Domain.Entities.TipoEstatusReembolso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoEstatusReembolso");
                });

            modelBuilder.Entity("Domain.Entities.TipoImpuesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoImpuestos");
                });

            modelBuilder.Entity("Domain.Entities.TipoIncapacidad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoIncapacidads");
                });

            modelBuilder.Entity("Domain.Entities.TipoIncidencia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoIncidencia");
                });

            modelBuilder.Entity("Domain.Entities.TipoJornada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoJornada");
                });

            modelBuilder.Entity("Domain.Entities.TipoMoneda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodigoIso")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Culture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoMonedas");
                });

            modelBuilder.Entity("Domain.Entities.TipoOtroPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoOtroPagos");
                });

            modelBuilder.Entity("Domain.Entities.TipoPercepcion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoPercepciones");
                });

            modelBuilder.Entity("Domain.Entities.TipoPeriocidadPago", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Dias")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoPeriocidadPago");
                });

            modelBuilder.Entity("Domain.Entities.TipoReembolso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoReembolso");
                });

            modelBuilder.Entity("Domain.Entities.TipoRegimen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoRegimens");
                });

            modelBuilder.Entity("Domain.Entities.TipoRiesgoTrabajo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoRiesgoTrabajos");
                });

            modelBuilder.Entity("Domain.Entities.TipoSolicitudTicket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Clave")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TipoSolicitudTickets");
                });

            modelBuilder.Entity("Domain.Entities.Uma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Anio")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Monto")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Umas");
                });

            modelBuilder.Entity("Domain.Entities.UnidadMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Estatus")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UnidadDeMedida")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UnidadMedidas");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<byte[]>("UserPassword")
                        .IsUnicode(false)
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserProfile")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)");

                    b.Property<byte>("UserType")
                        .IsUnicode(false)
                        .HasColumnType("tinyint");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Domain.Entities.UsoCfdi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UsoDeCfdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UsoCfdis");
                });

            modelBuilder.Entity("Domain.Entities.Vacacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnioLimiteInferior")
                        .HasColumnType("int");

                    b.Property<int>("AnioLimiteSuperior")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Dias")
                        .HasColumnType("int");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Vacaciones");
                });

            modelBuilder.Entity("Domain.Entities.Viatico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BancoId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int?>("EmployeePagoId")
                        .HasColumnType("int");

                    b.Property<string>("Estatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Monto")
                        .HasColumnType("real");

                    b.Property<float?>("MontoRecibido")
                        .HasColumnType("real");

                    b.Property<string>("NoCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SrcPDF")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("EmployeePagoId");

                    b.ToTable("Viaticos");
                });

            modelBuilder.Entity("Domain.Entities.AhorroVoluntario", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("AhorrosVoluntario")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("AhorrosVoluntario")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Entities.AhorroWise", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("AhorrosWise")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("AhorrosWise")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Clients")
                        .HasForeignKey("CompanyId")
                        .IsRequired()
                        .HasConstraintName("fk_id_company");

                    b.HasOne("Domain.Entities.RegimenFiscal", "RegimenFiscal")
                        .WithMany("Clients")
                        .HasForeignKey("RegimenFiscalId")
                        .IsRequired()
                        .HasConstraintName("fk_regimenFiscal_cliente");

                    b.Navigation("Company");

                    b.Navigation("RegimenFiscal");
                });

            modelBuilder.Entity("Domain.Entities.Company", b =>
                {
                    b.HasOne("Domain.Entities.RegimenFiscal", "RegimenFiscal")
                        .WithMany("Companies")
                        .HasForeignKey("RegimenFiscalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_regimenFiscal_companies");

                    b.Navigation("RegimenFiscal");
                });

            modelBuilder.Entity("Domain.Entities.ComplementoPago", b =>
                {
                    b.HasOne("Domain.Entities.Client", "Client")
                        .WithMany("ComplementoPagos")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_complementopago_client");

                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("ComplementoPagos")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_complementopago_copamany");

                    b.HasOne("Domain.Entities.RegimenFiscal", "RegimenFiscal")
                        .WithMany("ComplementoPagos")
                        .HasForeignKey("EmisorRegimenFiscalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_complementopago_emisorregimenfiscal");

                    b.HasOne("Domain.Entities.FormaPago", "FormaPago")
                        .WithMany("ComplementoPagos")
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_complementopago_formapago");

                    b.HasOne("Domain.Entities.TipoMoneda", "TipoMoneda")
                        .WithMany("ComplementoPagos")
                        .HasForeignKey("TipoMonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_complementopago_tipomoneda");

                    b.Navigation("Client");

                    b.Navigation("Company");

                    b.Navigation("FormaPago");

                    b.Navigation("RegimenFiscal");

                    b.Navigation("TipoMoneda");
                });

            modelBuilder.Entity("Domain.Entities.ComplementoPagoFactura", b =>
                {
                    b.HasOne("Domain.Entities.ComplementoPago", "ComplementoPago")
                        .WithMany("ComplementoPagoFacturas")
                        .HasForeignKey("ComplementoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_facturasasociada_complementopago");

                    b.HasOne("Domain.Entities.Factura", "Factura")
                        .WithMany("ComplementoPagoFacturas")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired()
                        .HasConstraintName("fk_facturaasociada_factura");

                    b.Navigation("ComplementoPago");

                    b.Navigation("Factura");
                });

            modelBuilder.Entity("Domain.Entities.Comprobante", b =>
                {
                    b.HasOne("Domain.Entities.Viatico", "Viatico")
                        .WithMany("Comprobantes")
                        .HasForeignKey("ViaticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Viatico");
                });

            modelBuilder.Entity("Domain.Entities.ComprobanteSinXML", b =>
                {
                    b.HasOne("Domain.Entities.FormaPago", "FormaPago")
                        .WithMany()
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoMoneda", "TipoMoneda")
                        .WithMany()
                        .HasForeignKey("TipoMonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Viatico", "Viatico")
                        .WithMany()
                        .HasForeignKey("ViaticoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FormaPago");

                    b.Navigation("TipoMoneda");

                    b.Navigation("Viatico");
                });

            modelBuilder.Entity("Domain.Entities.ContractsUserCompany", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("ContractsUserCompanies")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usercompany_company");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("ContractsUserCompanies")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_usercompany_user");

                    b.Navigation("Company");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Departamentos")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_CompanyId_Departamentos");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.HasOne("Domain.Entities.Banco", "Banco")
                        .WithMany("Employees")
                        .HasForeignKey("BancoId")
                        .HasConstraintName("fk_Banco_employee");

                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Company_employee");

                    b.HasOne("Domain.Entities.FormaPago", "FormaPago")
                        .WithMany("Employees")
                        .HasForeignKey("FormaPagoId");

                    b.HasOne("Domain.Entities.Employee", "Jefe")
                        .WithMany("Dependientes")
                        .HasForeignKey("JefeId");

                    b.HasOne("Domain.Entities.Puesto", "Puesto")
                        .WithMany("Employees")
                        .HasForeignKey("PuestoId")
                        .HasConstraintName("fk_Puesto_employee");

                    b.HasOne("Domain.Entities.RegimenFiscal", "RegimenFiscal")
                        .WithMany("Employees")
                        .HasForeignKey("RegimenFiscalId")
                        .HasConstraintName("fk_RegimenFiscal_employee");

                    b.HasOne("Domain.Entities.TipoContrato", "TipoContrato")
                        .WithMany("Employees")
                        .HasForeignKey("TipoContratoId")
                        .HasConstraintName("fk_TipoContrato_employee");

                    b.HasOne("Domain.Entities.TipoIncapacidad", "TipoIncapacidad")
                        .WithMany("Employees")
                        .HasForeignKey("TipoIncapacidadId")
                        .HasConstraintName("fk_TipoIncapacidad_employee");

                    b.HasOne("Domain.Entities.TipoJornada", "TipoJornada")
                        .WithMany("Employees")
                        .HasForeignKey("TipoJornadaId")
                        .HasConstraintName("fk_TipoJornada_employee");

                    b.HasOne("Domain.Entities.TipoPeriocidadPago", "TipoPeriocidadPago")
                        .WithMany("Employees")
                        .HasForeignKey("TipoPeriocidadPagoId");

                    b.HasOne("Domain.Entities.TipoRegimen", "TipoRegimen")
                        .WithMany("Employees")
                        .HasForeignKey("TipoRegimenId")
                        .HasConstraintName("fk_TipoRegimen_employee");

                    b.HasOne("Domain.Entities.TipoRiesgoTrabajo", "TipoRiesgoTrabajo")
                        .WithMany("Employees")
                        .HasForeignKey("TipoRiesgoTrabajoId")
                        .HasConstraintName("fk_TipoRiesgoTrabajo_employee");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Employees")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_user_employee");

                    b.Navigation("Banco");

                    b.Navigation("Company");

                    b.Navigation("FormaPago");

                    b.Navigation("Jefe");

                    b.Navigation("Puesto");

                    b.Navigation("RegimenFiscal");

                    b.Navigation("TipoContrato");

                    b.Navigation("TipoIncapacidad");

                    b.Navigation("TipoJornada");

                    b.Navigation("TipoPeriocidadPago");

                    b.Navigation("TipoRegimen");

                    b.Navigation("TipoRiesgoTrabajo");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Factura", b =>
                {
                    b.HasOne("Domain.Entities.Client", "Client")
                        .WithMany("Facturas")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_factura_client");

                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Facturas")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_factura_copmany");

                    b.HasOne("Domain.Entities.RegimenFiscal", "RegimenFiscal")
                        .WithMany("Facturas")
                        .HasForeignKey("EmisorRegimenFiscalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_factura_emisorregimenfiscal");

                    b.HasOne("Domain.Entities.FormaPago", "FormaPago")
                        .WithMany("Facturas")
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_factura_formapago");

                    b.HasOne("Domain.Entities.MetodoPago", "MetodoPago")
                        .WithMany("Facturas")
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_factura_medotodopago");

                    b.HasOne("Domain.Entities.TipoComprobante", "TipoComprobante")
                        .WithMany("Facturas")
                        .HasForeignKey("TipoComprobanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_factura_tipocomprobante");

                    b.HasOne("Domain.Entities.TipoMoneda", "TipoMoneda")
                        .WithMany("Facturas")
                        .HasForeignKey("TipoMonedaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_factura_tipomoneda");

                    b.HasOne("Domain.Entities.UsoCfdi", "UsoCfdi")
                        .WithMany("Facturas")
                        .HasForeignKey("UsoCfdiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_factura_usocfdi");

                    b.Navigation("Client");

                    b.Navigation("Company");

                    b.Navigation("FormaPago");

                    b.Navigation("MetodoPago");

                    b.Navigation("RegimenFiscal");

                    b.Navigation("TipoComprobante");

                    b.Navigation("TipoMoneda");

                    b.Navigation("UsoCfdi");
                });

            modelBuilder.Entity("Domain.Entities.FacturaMovimiento", b =>
                {
                    b.HasOne("Domain.Entities.CveProducto", "CveProducto")
                        .WithMany("FacturaMovimientos")
                        .HasForeignKey("CveProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_facturamovimiento_CveProducto");

                    b.HasOne("Domain.Entities.Factura", "Factura")
                        .WithMany("FacturaMovimientos")
                        .HasForeignKey("FacturaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_facturamovimiento_Factura");

                    b.HasOne("Domain.Entities.ObjetoImpuesto", "ObjetoImpuesto")
                        .WithMany("FacturaMovimientos")
                        .HasForeignKey("ObjetoImpuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_facturamovimiento_ObjetoImpuesto");

                    b.HasOne("Domain.Entities.UnidadMedida", "UnidadMedida")
                        .WithMany("FacturaMovimientos")
                        .HasForeignKey("UnidadMedidaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_facturamovimiento_UnidadMedida");

                    b.Navigation("CveProducto");

                    b.Navigation("Factura");

                    b.Navigation("ObjetoImpuesto");

                    b.Navigation("UnidadMedida");
                });

            modelBuilder.Entity("Domain.Entities.Incidencia", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Incidencias")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_company_incidencias");

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("Incidencias")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_employee_incidencias");

                    b.HasOne("Domain.Entities.TipoEstatusIncidencia", "TipoEstatusIncidencia")
                        .WithMany("Incidencias")
                        .HasForeignKey("EstatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_TipoEstatusIncidencia_Incidencias");

                    b.HasOne("Domain.Entities.TipoIncidencia", "TipoIncidencia")
                        .WithMany("Incidencias")
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_TipoIncidencia_Incidencias");

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("TipoEstatusIncidencia");

                    b.Navigation("TipoIncidencia");
                });

            modelBuilder.Entity("Domain.Entities.MenuUserSelector", b =>
                {
                    b.HasOne("Domain.Entities.Menu", "Menu")
                        .WithMany("MenuUserSelectors")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_menuuser_menu");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("MenuUserSelectors")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_menuuser_user");

                    b.Navigation("Menu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoAhorroVoluntario", b =>
                {
                    b.HasOne("Domain.Entities.AhorroVoluntario", "AhorroVoluntario")
                        .WithMany("Movimientos")
                        .HasForeignKey("AhorroVoluntarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AhorroVoluntario");

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoAhorroWise", b =>
                {
                    b.HasOne("Domain.Entities.AhorroWise", "AhorroWise")
                        .WithMany("Movimientos")
                        .HasForeignKey("AhorroWiseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AhorroWise");

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoPrestamo", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Prestamo", "Prestamo")
                        .WithMany("Movimientos")
                        .HasForeignKey("PrestamoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("Prestamo");
                });

            modelBuilder.Entity("Domain.Entities.MovimientoReembolso", b =>
                {
                    b.HasOne("Domain.Entities.FormaPago", "FormaPago")
                        .WithMany("MovimientosReembolso")
                        .HasForeignKey("FormaPagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_id_formapago_movreembolso");

                    b.HasOne("Domain.Entities.MetodoPago", "MetodoPago")
                        .WithMany("MovimientosReembolso")
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_id_metodopago_movreembolso");

                    b.HasOne("Domain.Entities.Reembolso", "Reembolso")
                        .WithMany("MovimientosReembolso")
                        .HasForeignKey("ReembolsoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_id_reembolso_movreembolso");

                    b.HasOne("Domain.Entities.RegimenFiscal", "RegimenFiscal")
                        .WithMany("MovimientosReembolso")
                        .HasForeignKey("RegimenFiscalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_id_regimenfiscal_movreembolso");

                    b.HasOne("Domain.Entities.TipoComprobante", "TipoComprobante")
                        .WithMany("MovimientosReembolso")
                        .HasForeignKey("TipoComprobanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_id_tipocomprobante_movreembolso");

                    b.HasOne("Domain.Entities.TipoImpuesto", "TipoImpuesto")
                        .WithMany("MovimientosReembolso")
                        .HasForeignKey("TipoImpuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_id_tipoimpuesto_movreembolso");

                    b.HasOne("Domain.Entities.TipoMoneda", "TipoMoneda")
                        .WithMany("MovimientosReembolso")
                        .HasForeignKey("TipoMonedaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_id_tipomoneda_movreembolso");

                    b.HasOne("Domain.Entities.TipoReembolso", "TipoReembolso")
                        .WithMany("MovimientosReembolso")
                        .HasForeignKey("TipoReembolsoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("fk_id_tiporeembolso_movreembolso");

                    b.Navigation("FormaPago");

                    b.Navigation("MetodoPago");

                    b.Navigation("Reembolso");

                    b.Navigation("RegimenFiscal");

                    b.Navigation("TipoComprobante");

                    b.Navigation("TipoImpuesto");

                    b.Navigation("TipoMoneda");

                    b.Navigation("TipoReembolso");
                });

            modelBuilder.Entity("Domain.Entities.Nif", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Nifs")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_company_nif");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Entities.NifResultado", b =>
                {
                    b.HasOne("Domain.Entities.Nif", "Nif")
                        .WithMany("Nifresultados")
                        .HasForeignKey("NifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_nif_nifResultados");

                    b.Navigation("Nif");
                });

            modelBuilder.Entity("Domain.Entities.Nomina", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Nominas")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_company_nominas");

                    b.HasOne("Domain.Entities.RegimenFiscal", "RegimenFiscal")
                        .WithMany("Nominas")
                        .HasForeignKey("EmisorRegimenFistalId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_regimenFiscal_nominas");

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("Nominas")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_employee_nominas");

                    b.HasOne("Domain.Entities.MetodoPago", "MetodoPago")
                        .WithMany("Nominas")
                        .HasForeignKey("MetodoPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_MetodoPago_nominas");

                    b.HasOne("Domain.Entities.Periodo", "Periodo")
                        .WithMany("Nominas")
                        .HasForeignKey("PeriodoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Periodo_nominas");

                    b.HasOne("Domain.Entities.Puesto", "Puesto")
                        .WithMany("Nominas")
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_Puesto_nominas");

                    b.HasOne("Domain.Entities.UsoCfdi", "UsoCfdi")
                        .WithMany("Nominas")
                        .HasForeignKey("ReceptorUsoCfdiId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_UsoCfdi_nominas");

                    b.HasOne("Domain.Entities.TipoContrato", "TipoContrato")
                        .WithMany("Nominas")
                        .HasForeignKey("TipoContratoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_TipoContrato_nominas");

                    b.HasOne("Domain.Entities.TipoDeduccion", null)
                        .WithMany("Nominas")
                        .HasForeignKey("TipoDeduccionId");

                    b.HasOne("Domain.Entities.TipoJornada", "TipoJornada")
                        .WithMany("Nominas")
                        .HasForeignKey("TipoJornadaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_TipoJornada_nominas");

                    b.HasOne("Domain.Entities.TipoOtroPago", null)
                        .WithMany("Nominas")
                        .HasForeignKey("TipoOtroPagoId");

                    b.HasOne("Domain.Entities.TipoPercepcion", null)
                        .WithMany("Nominas")
                        .HasForeignKey("TipoPercepcionId");

                    b.HasOne("Domain.Entities.TipoPeriocidadPago", "TipoPeriocidadPago")
                        .WithMany("Nominas")
                        .HasForeignKey("TipoPeriocidadPagoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_TipoPeriocidadPago_nominas");

                    b.HasOne("Domain.Entities.TipoRegimen", "TipoRegimen")
                        .WithMany("Nominas")
                        .HasForeignKey("TipoRegimenId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_TipoRegimen_nominas");

                    b.HasOne("Domain.Entities.TipoRiesgoTrabajo", "TipoRiesgoTrabajo")
                        .WithMany("Nominas")
                        .HasForeignKey("TipoRiesgoTrabajoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_TipoRiesgoTrabajo_nominas");

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("MetodoPago");

                    b.Navigation("Periodo");

                    b.Navigation("Puesto");

                    b.Navigation("RegimenFiscal");

                    b.Navigation("TipoContrato");

                    b.Navigation("TipoJornada");

                    b.Navigation("TipoPeriocidadPago");

                    b.Navigation("TipoRegimen");

                    b.Navigation("TipoRiesgoTrabajo");

                    b.Navigation("UsoCfdi");
                });

            modelBuilder.Entity("Domain.Entities.NominaDeduccion", b =>
                {
                    b.HasOne("Domain.Entities.Nomina", "Nomina")
                        .WithMany("NominaDeducciones")
                        .HasForeignKey("NominaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Nomina_NominaDeducciones");

                    b.Navigation("Nomina");
                });

            modelBuilder.Entity("Domain.Entities.NominaOtroPago", b =>
                {
                    b.HasOne("Domain.Entities.Nomina", "Nomina")
                        .WithMany("NominaOtroPagos")
                        .HasForeignKey("NominaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Nomina_NominaOtroPagos");

                    b.Navigation("Nomina");
                });

            modelBuilder.Entity("Domain.Entities.NominaPercepcion", b =>
                {
                    b.HasOne("Domain.Entities.Nomina", "Nomina")
                        .WithMany("NominaPercepciones")
                        .HasForeignKey("NominaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_Nomina_NominaPercepciones");

                    b.Navigation("Nomina");
                });

            modelBuilder.Entity("Domain.Entities.Periodo", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Periodos")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_CompanyId_Periodos");

                    b.HasOne("Domain.Entities.TipoPeriocidadPago", "TipoPeriocidadPago")
                        .WithMany("Periodos")
                        .HasForeignKey("TipoPeriocidadPagoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_TipoPeriocidadPagoId_Periodos");

                    b.Navigation("Company");

                    b.Navigation("TipoPeriocidadPago");
                });

            modelBuilder.Entity("Domain.Entities.Prestamo", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Prestamos")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("Prestamos")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Domain.Entities.Puesto", b =>
                {
                    b.HasOne("Domain.Entities.Departamento", "Departamento")
                        .WithMany("Puestos")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_DepartamentoId_Puestos");

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Domain.Entities.Reembolso", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Rembolsos")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_id_company_reembolso");

                    b.HasOne("Domain.Entities.TipoEstatusReembolso", "TipoEstatusReembolso")
                        .WithMany("Reembolsos")
                        .HasForeignKey("EstatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_id_estatus_reembolso");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("Reembolsos")
                        .HasForeignKey("UsuarioIdPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_id_user_reembolso");

                    b.Navigation("Company");

                    b.Navigation("TipoEstatusReembolso");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.RegistroAsistencia", b =>
                {
                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany("RegistroAsistencias")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_employeeid_registroasistencias");

                    b.HasOne("Domain.Entities.TipoAsistencia", "TipoAsistencia")
                        .WithMany("RegistroAsistencias")
                        .HasForeignKey("TipoAsistenciaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_employeeid_TipoAsistencia");

                    b.Navigation("Employee");

                    b.Navigation("TipoAsistencia");
                });

            modelBuilder.Entity("Domain.Entities.Sistema", b =>
                {
                    b.HasOne("Domain.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("Domain.Entities.SistemaDepartamento", b =>
                {
                    b.HasOne("Domain.Entities.Departamento", "Departamento")
                        .WithMany("SistemaDepartamento")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Sistema", "Sistema")
                        .WithMany("SistemaDepartamento")
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Sistema");
                });

            modelBuilder.Entity("Domain.Entities.SubMenu", b =>
                {
                    b.HasOne("Domain.Entities.Menu", "Menu")
                        .WithMany("SubMenus")
                        .HasForeignKey("MenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_submenu_menu");

                    b.Navigation("Menu");
                });

            modelBuilder.Entity("Domain.Entities.SubMenuUserSelector", b =>
                {
                    b.HasOne("Domain.Entities.SubMenu", "SubMenu")
                        .WithMany("SubMenuUserSelectors")
                        .HasForeignKey("SubMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_submenuuser_submenu");

                    b.HasOne("Domain.Entities.User", "User")
                        .WithMany("SubMenuUserSelectors")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_submenuuser_user");

                    b.Navigation("SubMenu");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany("Tickets")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Departamento", "Departamento")
                        .WithMany("Tickets")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "EmployeeAsignado")
                        .WithMany("TicketsAsignados")
                        .HasForeignKey("EmployeeAsignadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "EmployeeCreador")
                        .WithMany("TicketsCreados")
                        .HasForeignKey("EmployeeCreadorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Estado", "Estado")
                        .WithMany()
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Sistema", "Sistema")
                        .WithMany()
                        .HasForeignKey("SistemaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.TipoSolicitudTicket", "TipoSolicitudTicket")
                        .WithMany("Tickets")
                        .HasForeignKey("TipoSolicitudTicketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("Departamento");

                    b.Navigation("EmployeeAsignado");

                    b.Navigation("EmployeeCreador");

                    b.Navigation("Estado");

                    b.Navigation("Sistema");

                    b.Navigation("TipoSolicitudTicket");
                });

            modelBuilder.Entity("Domain.Entities.Vacacion", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Domain.Entities.Viatico", b =>
                {
                    b.HasOne("Domain.Entities.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Employee", "EmployeePago")
                        .WithMany()
                        .HasForeignKey("EmployeePagoId");

                    b.Navigation("Company");

                    b.Navigation("Employee");

                    b.Navigation("EmployeePago");
                });

            modelBuilder.Entity("Domain.Entities.AhorroVoluntario", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("Domain.Entities.AhorroWise", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("Domain.Entities.Banco", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Domain.Entities.Client", b =>
                {
                    b.Navigation("ComplementoPagos");

                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("Domain.Entities.Company", b =>
                {
                    b.Navigation("AhorrosVoluntario");

                    b.Navigation("AhorrosWise");

                    b.Navigation("Clients");

                    b.Navigation("ComplementoPagos");

                    b.Navigation("ContractsUserCompanies");

                    b.Navigation("Departamentos");

                    b.Navigation("Employees");

                    b.Navigation("Facturas");

                    b.Navigation("Incidencias");

                    b.Navigation("Nifs");

                    b.Navigation("Nominas");

                    b.Navigation("Periodos");

                    b.Navigation("Prestamos");

                    b.Navigation("Rembolsos");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Domain.Entities.ComplementoPago", b =>
                {
                    b.Navigation("ComplementoPagoFacturas");
                });

            modelBuilder.Entity("Domain.Entities.CveProducto", b =>
                {
                    b.Navigation("FacturaMovimientos");
                });

            modelBuilder.Entity("Domain.Entities.Departamento", b =>
                {
                    b.Navigation("Puestos");

                    b.Navigation("SistemaDepartamento");

                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Domain.Entities.Employee", b =>
                {
                    b.Navigation("AhorrosVoluntario");

                    b.Navigation("AhorrosWise");

                    b.Navigation("Dependientes");

                    b.Navigation("Incidencias");

                    b.Navigation("Nominas");

                    b.Navigation("Prestamos");

                    b.Navigation("RegistroAsistencias");

                    b.Navigation("TicketsAsignados");

                    b.Navigation("TicketsCreados");
                });

            modelBuilder.Entity("Domain.Entities.Factura", b =>
                {
                    b.Navigation("ComplementoPagoFacturas");

                    b.Navigation("FacturaMovimientos");
                });

            modelBuilder.Entity("Domain.Entities.FormaPago", b =>
                {
                    b.Navigation("ComplementoPagos");

                    b.Navigation("Employees");

                    b.Navigation("Facturas");

                    b.Navigation("MovimientosReembolso");
                });

            modelBuilder.Entity("Domain.Entities.Menu", b =>
                {
                    b.Navigation("MenuUserSelectors");

                    b.Navigation("SubMenus");
                });

            modelBuilder.Entity("Domain.Entities.MetodoPago", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("MovimientosReembolso");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.Nif", b =>
                {
                    b.Navigation("Nifresultados");
                });

            modelBuilder.Entity("Domain.Entities.Nomina", b =>
                {
                    b.Navigation("NominaDeducciones");

                    b.Navigation("NominaOtroPagos");

                    b.Navigation("NominaPercepciones");
                });

            modelBuilder.Entity("Domain.Entities.ObjetoImpuesto", b =>
                {
                    b.Navigation("FacturaMovimientos");
                });

            modelBuilder.Entity("Domain.Entities.Periodo", b =>
                {
                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.Prestamo", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("Domain.Entities.Puesto", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.Reembolso", b =>
                {
                    b.Navigation("MovimientosReembolso");
                });

            modelBuilder.Entity("Domain.Entities.RegimenFiscal", b =>
                {
                    b.Navigation("Clients");

                    b.Navigation("Companies");

                    b.Navigation("ComplementoPagos");

                    b.Navigation("Employees");

                    b.Navigation("Facturas");

                    b.Navigation("MovimientosReembolso");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.Sistema", b =>
                {
                    b.Navigation("SistemaDepartamento");
                });

            modelBuilder.Entity("Domain.Entities.SubMenu", b =>
                {
                    b.Navigation("SubMenuUserSelectors");
                });

            modelBuilder.Entity("Domain.Entities.TipoAsistencia", b =>
                {
                    b.Navigation("RegistroAsistencias");
                });

            modelBuilder.Entity("Domain.Entities.TipoComprobante", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("MovimientosReembolso");
                });

            modelBuilder.Entity("Domain.Entities.TipoContrato", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.TipoDeduccion", b =>
                {
                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.TipoEstatusIncidencia", b =>
                {
                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Domain.Entities.TipoEstatusReembolso", b =>
                {
                    b.Navigation("Reembolsos");
                });

            modelBuilder.Entity("Domain.Entities.TipoImpuesto", b =>
                {
                    b.Navigation("MovimientosReembolso");
                });

            modelBuilder.Entity("Domain.Entities.TipoIncapacidad", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("Domain.Entities.TipoIncidencia", b =>
                {
                    b.Navigation("Incidencias");
                });

            modelBuilder.Entity("Domain.Entities.TipoJornada", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.TipoMoneda", b =>
                {
                    b.Navigation("ComplementoPagos");

                    b.Navigation("Facturas");

                    b.Navigation("MovimientosReembolso");
                });

            modelBuilder.Entity("Domain.Entities.TipoOtroPago", b =>
                {
                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.TipoPercepcion", b =>
                {
                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.TipoPeriocidadPago", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Nominas");

                    b.Navigation("Periodos");
                });

            modelBuilder.Entity("Domain.Entities.TipoReembolso", b =>
                {
                    b.Navigation("MovimientosReembolso");
                });

            modelBuilder.Entity("Domain.Entities.TipoRegimen", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.TipoRiesgoTrabajo", b =>
                {
                    b.Navigation("Employees");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.TipoSolicitudTicket", b =>
                {
                    b.Navigation("Tickets");
                });

            modelBuilder.Entity("Domain.Entities.UnidadMedida", b =>
                {
                    b.Navigation("FacturaMovimientos");
                });

            modelBuilder.Entity("Domain.Entities.User", b =>
                {
                    b.Navigation("ContractsUserCompanies");

                    b.Navigation("Employees");

                    b.Navigation("MenuUserSelectors");

                    b.Navigation("Reembolsos");

                    b.Navigation("SubMenuUserSelectors");
                });

            modelBuilder.Entity("Domain.Entities.UsoCfdi", b =>
                {
                    b.Navigation("Facturas");

                    b.Navigation("Nominas");
                });

            modelBuilder.Entity("Domain.Entities.Viatico", b =>
                {
                    b.Navigation("Comprobantes");
                });
#pragma warning restore 612, 618
        }
    }
}
